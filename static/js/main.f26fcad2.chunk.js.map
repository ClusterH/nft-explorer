{"version":3,"sources":["ReactWindowScroller.jsx","presets.ts","redux/contractsSlice.ts","redux/optionsSlice.ts","hooks/useTotalSupply.ts","hooks/useTokenURI.ts","hooks/useTokenByIndex.ts","hooks/usePrevious.ts","hooks/useForceUpdate.ts","constants.ts","GalleryModal.tsx","helpers/ipfsGatewayUrl.ts","helpers/sleep.ts","Gallery.tsx","ipsGateways.ts","Header.tsx","Navigator.tsx","App.tsx","theme.ts","redux/store.ts","index.tsx"],"names":["windowScrollPositionKey","y","x","documentScrollPositionKey","getScrollPosition","axis","window","document","documentElement","body","ReactWindowScroller","children","throttleTime","isGrid","listRef","outerRef","useRef","ref","useEffect","handleWindowScroll","throttle","current","offsetTop","offsetLeft","scrollTop","scrollLeft","scrollTo","addEventListener","cancel","removeEventListener","onScroll","useCallback","scrollOffset","scrollUpdateWasRequested","top","left","Math","min","style","width","height","display","presets","name","address","options","cors","initialState","dataByContract","activeContractAddress","Object","values","floor","random","length","contractsSlice","createSlice","reducers","init","state","action","payload","contractAddress","contractMap","i","initialValue","totalSupply","setMetadataURI","tokens","forEach","tokenId","uri","setMetadataJSON","json","image","changeActiveContractAddress","actions","corsProxyUrl","ipfsGateway","itemSize","optionsSlice","setCorsProxyUrl","setIpfsGateway","setItemSize","contractInterface","ethers","utils","Interface","ERC721","abi","useTotalSupply","useContractCall","method","args","useTokenURI","indexes","useContractCalls","map","index","useTokenByIndex","usePrevious","value","useForceUpdate","useState","setValue","process","REACT_APP_ALCHEMY_API","REACT_APP_CHAIN_ID","REACT_APP_ETHERSCAN_URL","REACT_APP_SITE_URL","alchemyApi","configChainId","parseInt","GalleryModal","imgUrl","onClose","resize","innerWidth","innerHeight","setWindowSize","dimension","setDimension","isOpen","closeOnOverlayClick","motionPreset","size","margin","bg","justifyContent","onClick","e","element","target","classList","contains","justify","align","className","maxWidth","objectFit","src","ipfsGatewayUrl","hash","slice","splitHash","split","transformedHash","cids","toV1","toString","sleep","ms","signal","Promise","resolve","reject","timeout","setTimeout","clearTimeout","Gallery","forceUpdate","chainId","useEthers","dispatch","useDispatch","useSelector","contracts","containerWidth","wrongNetWork","missingUri","filter","loadedUris","every","tokenModal","setTokenModal","pendingUriTokens","setPendingUriTokens","delayedImagesMap","delayedJsonMap","imagesLoadedMap","initialToken","tokenURIs","toNumber","list","keys","key","_","JSON","stringify","stringCache","tokensToDispatch","tokensToDispatchIds","t","prevActiveContractAddress","controller","abort","delayCachedImage","sleepTime","imgSrc","a","img","Image","startsWith","onload","aborted","newDelayedImagesMap","complete","naturalWidth","AbortController","promise","fetchTokenJSON","fetch","response","text","data","parse","console","log","onItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","times","visibleFirstToken","visibleLastToken","jsonDelay","delayJson","imageDelay","cellRenderer","start","cells","Array","fill","direction","position","_hover","background","opacity","fontSize","ml","boxSize","alt","title","loading","wrap","id","itemCount","ceil","debounce","p","mt","color","textAlign","toLocaleString","ipsGateways","Header","formContractAddress","setFormContractAddress","formIpfsGatewayUrl","serFormIpfsGatewayUrl","firstFormIpfsGatewayUrl","setFirstFormIpfsGatewayUrl","find","preset","setPreset","showOptions","setShowOptions","formCorsProxyUrl","setFormCorsProxyUrl","firstFormCorsProxyUrl","setFirstFormCorsProxyUrl","presetsSorted","sort","b","localeCompare","as","flexDirection","alignItems","borderRadius","m","pt","pb","pl","pr","href","base","md","onChange","placeholder","borderWidth","ipfsGateways","isDisabled","optionsInitialState","Navigator","tokensByIndex","indicatorPosition","setIndicatorPosition","scrollPercentage","setScrollPercentage","fn","yPos","scrollY","offsetHeight","chunks","increase","items","numItems","isReady","offset","itemView","right","num","growthPercentage","mr","numTo","scrollToItem","App","createRef","theme","extendTheme","config","initialColorMode","useSystemColorMode","store","configureStore","reducer","contractsReducer","optionsReducer","middleware","save","states","namespace","preloadedState","load","readOnlyChainId","readOnlyUrls","ReactDOM","render","StrictMode","DAppProvider","getElementById"],"mappings":"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","file":"static/js/main.f26fcad2.chunk.js","sourcesContent":["import { useRef, useEffect, useCallback } from \"react\";\nimport throttle from \"lodash/throttle\";\n\nconst windowScrollPositionKey: any = {\n  y: \"pageYOffset\",\n  x: \"pageXOffset\"\n};\n\nconst documentScrollPositionKey: any = {\n  y: \"scrollTop\",\n  x: \"scrollLeft\"\n};\n\nconst getScrollPosition = (axis: any) =>\n  window[windowScrollPositionKey[axis]] ||\n  document.documentElement[documentScrollPositionKey[axis]] ||\n  document.body[documentScrollPositionKey[axis]] ||\n  0;\n\nexport const ReactWindowScroller = ({\n  children,\n  throttleTime = 10,\n  isGrid = false,\n  listRef\n}) => {\n  // const ref = useRef();\n  const outerRef = useRef();\n  const ref = listRef;\n\n  useEffect(() => {\n    const handleWindowScroll = throttle(() => {\n      const { offsetTop = 0, offsetLeft = 0 } = outerRef.current || {};\n      const scrollTop = getScrollPosition(\"y\") - offsetTop;\n      const scrollLeft = getScrollPosition(\"x\") - offsetLeft;\n      if (isGrid)\n        ref.current && ref.current.scrollTo({ scrollLeft, scrollTop });\n      if (!isGrid) ref.current && ref.current.scrollTo(scrollTop);\n    }, throttleTime);\n\n    window.addEventListener(\"scroll\", handleWindowScroll);\n    return () => {\n      handleWindowScroll.cancel();\n      window.removeEventListener(\"scroll\", handleWindowScroll);\n    };\n  }, [isGrid, ref, throttleTime]);\n\n  const onScroll = useCallback(\n    ({ scrollLeft, scrollTop, scrollOffset, scrollUpdateWasRequested }) => {\n      if (!scrollUpdateWasRequested) return;\n      const top = getScrollPosition(\"y\");\n      const left = getScrollPosition(\"x\");\n      const { offsetTop = 0, offsetLeft = 0 } = outerRef.current || {};\n\n      scrollOffset += Math.min(top, offsetTop);\n      scrollTop += Math.min(top, offsetTop);\n      scrollLeft += Math.min(left, offsetLeft);\n\n      if (!isGrid && scrollOffset !== top) window.scrollTo(0, scrollOffset);\n      if (isGrid && (scrollTop !== top || scrollLeft !== left)) {\n        window.scrollTo(scrollLeft, scrollTop);\n      }\n    },\n    [isGrid]\n  );\n\n  return children({\n    ref,\n    outerRef,\n    style: {\n      width: isGrid ? \"auto\" : \"100%\",\n      height: \"100%\",\n      display: \"inline-block\"\n    },\n    onScroll\n  });\n};\n","const presets: any[] = [\n  {\n    name: \"Pudgy Penguins\",\n    address: \"0xBd3531dA5CF5857e7CfAA92426877b022e612cf8\"\n  },\n  { name: \"Cool Cats\", address: \"0x1A92f7381B9F03921564a437210bB9396471050C\" },\n  {\n    name: \"Boonji Project\",\n    address: \"0x4cd0ea8b1bDb5ab9249d96cCF3d8A0d3aDa2Bc76\"\n  },\n  {\n    name: \"Lazy Lions\",\n    address: \"0x8943C7bAC1914C9A7ABa750Bf2B6B09Fd21037E0\",\n    options: { cors: true }\n  },\n  {\n    name: \"World Of Women\",\n    address: \"0xe785E82358879F061BC3dcAC6f0444462D4b5330\",\n    options: { cors: true }\n  },\n  {\n    name: \"Creature World\",\n    address: \"0xc92cedDfb8dd984A89fb494c376f9A48b999aAFc\",\n    options: { cors: true }\n  },\n  {\n    name: \"DeadFellaz\",\n    address: \"0x2acAb3DEa77832C09420663b0E1cB386031bA17B\",\n    options: { cors: true }\n  },\n  {\n    name: \"Stoner Cats\",\n    address: \"0xD4d871419714B778eBec2E22C7c53572b573706e\",\n    options: { cors: true }\n  },\n  {\n    name: \"Desperate ApeWives\",\n    address: \"0xF1268733C6FB05EF6bE9cF23d24436Dcd6E0B35E\",\n    options: { cors: true }\n  },\n  {\n    name: \"Bored Ape Yacht Club\",\n    address: \"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\",\n    options: { cors: true }\n  },\n  {\n    name: \"CryptoMories\",\n    address: \"0x1a2F71468F656E97c2F86541E57189F59951efe7\",\n    options: { cors: true }\n  },\n  {\n    name: \"Outlaw Gals\",\n    address: \"0x62EFd38a5efd7cfDB1c6E1c50F3083Af636D1b40\",\n    options: { cors: true }\n  },\n  {\n    name: \"MutantCats\",\n    address: \"0xaAdBA140Ae5e4c8a9eF0Cc86EA3124b446e3E46A\",\n    options: { cors: true }\n  }\n];\n\nexport default presets;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport presets from \"../presets\";\n\ninterface ContractState {\n  activeContractAddress: string;\n  dataByContract: any;\n}\n\nconst initialState: ContractState = {\n  dataByContract: {},\n  // Start with a random address from presets\n  activeContractAddress: Object.values(presets)[\n    Math.floor(Math.random() * Object.values(presets).length)\n  ].address\n};\n\nexport const contractsSlice = createSlice({\n  name: \"contracts\",\n  initialState,\n  reducers: {\n    init: (state, action) => {\n      if (!state.dataByContract[action.payload.contractAddress]) {\n        let contractMap: { [index: number]: any } = {};\n        for (\n          let i = action.payload.initialValue;\n          i < action.payload.totalSupply + action.payload.initialValue;\n          i++\n        ) {\n          contractMap[i] = {};\n        }\n        state.dataByContract[action.payload.contractAddress] = contractMap;\n      }\n    },\n    setMetadataURI: (state, action) => {\n      action.payload.tokens.forEach(({ tokenId, uri }: any) => {\n        state.dataByContract[action.payload.contractAddress][tokenId].uri = uri;\n      });\n    },\n    setMetadataJSON: (state, action) => {\n      action.payload.tokens.forEach(({ tokenId, json }: any) => {\n        state.dataByContract[action.payload.contractAddress][tokenId].json = {\n          image: json.image,\n          name: json.name\n        };\n      });\n    },\n    changeActiveContractAddress: (state, action) => {\n      state.activeContractAddress = action.payload;\n    }\n  }\n});\n\nexport const {\n  setMetadataURI,\n  setMetadataJSON,\n  changeActiveContractAddress,\n  init\n} = contractsSlice.actions;\n\nexport default contractsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface OptionState {\n  corsProxyUrl: string | null;\n  ipfsGateway: string;\n  itemSize: number;\n}\n\nexport const initialState: OptionState = {\n  corsProxyUrl:\n    \"https://e6bp05g0dh.execute-api.us-east-1.amazonaws.com/dev?url=\",\n  ipfsGateway: \"infura-ipfs.io\",\n  itemSize: 200\n};\n\nexport const optionsSlice = createSlice({\n  name: \"options\",\n  initialState,\n  reducers: {\n    setCorsProxyUrl: (state, action) => {\n      state.corsProxyUrl = action.payload;\n    },\n    setIpfsGateway: (state, action) => {\n      state.ipfsGateway = action.payload;\n    },\n    setItemSize: (state, action) => {\n      state.itemSize = action.payload;\n    }\n  }\n});\n\nexport const {\n  setCorsProxyUrl,\n  setIpfsGateway,\n  setItemSize\n} = optionsSlice.actions;\n\nexport default optionsSlice.reducer;\n","import { ethers } from \"ethers\";\nimport { useContractCall } from \"@usedapp/core\";\nimport ERC721 from \"../abi/ERC721.json\";\n// import { contractAddress } from \"../constants.js\";\n\nconst contractInterface = new ethers.utils.Interface(ERC721.abi);\n\nconst useTotalSupply = (contractAddress: string) => {\n  const [totalSupply]: any =\n    useContractCall({\n      abi: contractInterface,\n      address: contractAddress,\n      method: \"totalSupply\",\n      args: []\n    }) ?? [];\n  return totalSupply;\n};\nexport default useTotalSupply;\n","import { ethers } from \"ethers\";\nimport { useContractCalls } from \"@usedapp/core\";\nimport ERC721 from \"../abi/ERC721.json\";\n// import { contractAddress } from \"../constants.js\";\n\nconst contractInterface = new ethers.utils.Interface(ERC721.abi);\n\nconst useTokenURI = (contractAddress: string, indexes: number[]) => {\n  const tokenURI: any =\n    useContractCalls(\n      indexes.map(index => ({\n        abi: contractInterface,\n        address: contractAddress,\n        method: \"tokenURI\",\n        args: [index]\n      }))\n    ) ?? null;\n  return tokenURI;\n};\nexport default useTokenURI;\n","import { ethers } from \"ethers\";\nimport { useContractCalls } from \"@usedapp/core\";\nimport ERC721 from \"../abi/ERC721.json\";\n\nconst contractInterface = new ethers.utils.Interface(ERC721.abi);\n\nconst useTokenByIndex = (contractAddress: string, indexes: number[]) => {\n  const tokenByIndex: any =\n    useContractCalls(\n      indexes.map(index => ({\n        abi: contractInterface,\n        address: contractAddress,\n        method: \"tokenByIndex\",\n        args: [index]\n      }))\n    ) ?? null;\n  return tokenByIndex;\n};\nexport default useTokenByIndex;\n","import { useEffect, useRef } from \"react\";\nconst usePrevious = (value: any) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePrevious;\n","import { useState } from \"react\";\nconst useForceUpdate = () => {\n  const [, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n};\nexport default useForceUpdate;\n","const {\n  REACT_APP_ALCHEMY_API,\n  REACT_APP_CHAIN_ID,\n  REACT_APP_ETHERSCAN_URL,\n  REACT_APP_SITE_URL\n} = process.env;\n\nexport const alchemyApi: string = `${REACT_APP_ALCHEMY_API}`;\nexport const configChainId: number = REACT_APP_CHAIN_ID\n  ? parseInt(REACT_APP_CHAIN_ID)\n  : 0;\nexport const etherScanUrl: string = `${REACT_APP_ETHERSCAN_URL}`;\nexport const siteUrl: string = `${REACT_APP_SITE_URL}`;\n","import { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  Image,\n  Flex\n} from \"@chakra-ui/react\";\n\nconst GalleryModal = ({ tokenId, imgUrl, onClose }: GalleryModalProps) => {\n  useEffect(() => {\n    resize();\n    window.addEventListener(\"resize\", () => {\n      resize();\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  const [, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [dimension, setDimension] = useState(\"width\");\n\n  const resize = () => {\n    if (window.innerWidth > window.innerHeight) {\n      setDimension(\"height\");\n    } else {\n      setDimension(\"width\");\n    }\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n  };\n\n  return (\n    <Modal\n      isOpen={tokenId !== null}\n      onClose={onClose}\n      closeOnOverlayClick\n      motionPreset=\"none\"\n      size={\"full\"}\n    >\n      <ModalOverlay />\n      <ModalContent margin=\"0\" bg=\"rgba(0,0,0,0.5)\">\n        <ModalBody\n          display=\"flex\"\n          justifyContent=\"center\"\n          onClick={e => {\n            const element = e.target as HTMLElement;\n            if (\n              element.classList.contains(\"chakra-modal__body\") ||\n              element.classList.contains(\"image-container\")\n            ) {\n              onClose();\n            }\n          }}\n        >\n          <Flex\n            height=\"\"\n            justify=\"center\"\n            align=\"center\"\n            className=\"image-container\"\n          >\n            <Image\n              maxWidth=\"none\"\n              height={dimension === \"height\" ? \"calc(100vh - 50px)\" : \"auto\"}\n              width={dimension === \"width\" ? \"calc(100vw - 50px)\" : \"auto\"}\n              objectFit=\"cover\"\n              src={imgUrl}\n            />\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport interface GalleryModalProps {\n  tokenId: number;\n  imgUrl: string;\n  onClose: () => any;\n}\nexport default GalleryModal;\n","import cids from \"cids\";\nconst ipfsGatewayUrl = (uri: string, ipfsGateway: string): string => {\n  const hash = uri.slice(7);\n  switch (ipfsGateway) {\n    case \"cloudflare-ipfs.com\":\n    case \"gateway.pinata.cloud\":\n    case \"ipfs.io\":\n    case \"gateway.ipfs.io\":\n    case \"ravencoinipfs-gateway.com\":\n      return `https://${ipfsGateway}/ipfs/${hash}`;\n    case \"dweb.link\":\n    case \"infura-ipfs.io\":\n      const splitHash = hash.split(\"/\");\n      const transformedHash = new cids(splitHash[0]).toV1().toString(\"base32\");\n      return `https://${transformedHash}.ipfs.${ipfsGateway}${\n        splitHash[1] ? `/${splitHash[1]}` : \"\"\n      }`;\n  }\n  return uri;\n};\nexport default ipfsGatewayUrl;\n","const sleep = (ms: number, signal?: any) =>\n  new Promise((resolve, reject) => {\n    let timeout: any;\n\n    const abortHandler = () => {\n      clearTimeout(timeout);\n      //reject();\n    };\n\n    timeout = setTimeout(resolve, ms);\n\n    signal?.addEventListener(\"abort\", abortHandler);\n    return timeout;\n  });\nexport default sleep;\n","import { Fragment, useEffect, useState, useRef, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { ReactWindowScroller } from \"./ReactWindowScroller\";\n// import { RouteComponentProps } from \"@reach/router\";\nimport { useEthers } from \"@usedapp/core\";\nimport { Flex, Box, Text, Spinner, Link, Image } from \"@chakra-ui/react\";\nimport debounce from \"debounce\";\n\nimport { init, setMetadataURI, setMetadataJSON } from \"./redux/contractsSlice\";\nimport { setItemSize } from \"./redux/optionsSlice\";\nimport { RootState } from \"./redux/store\";\n\nimport useTotalSupply from \"./hooks/useTotalSupply\";\nimport useTokenURI from \"./hooks/useTokenURI\";\nimport useTokenByIndex from \"./hooks/useTokenByIndex\";\nimport usePrevious from \"./hooks/usePrevious\";\nimport useForceUpdate from \"./hooks/useForceUpdate\";\n\nimport { configChainId } from \"./constants\";\n\nimport GalleryModal from \"./GalleryModal\";\n\nimport ipfsGatewayUrl from \"./helpers/ipfsGatewayUrl\";\nimport sleep from \"./helpers/sleep\";\n\nconst Gallery = ({ listRef }) => {\n  // Common hooks\n  const forceUpdate = useForceUpdate();\n\n  // useDapp hooks\n  const { chainId } = useEthers();\n\n  // Redux\n  const dispatch = useDispatch();\n  const dataByContract = useSelector(\n    ({ contracts: { dataByContract } }: RootState) => dataByContract\n  );\n  const activeContractAddress = useSelector(\n    ({ contracts: { activeContractAddress } }: RootState) =>\n      activeContractAddress\n  );\n  const corsProxyUrl = useSelector(\n    ({ options: { corsProxyUrl } }: RootState) => corsProxyUrl\n  );\n  const ipfsGateway = useSelector(\n    ({ options: { ipfsGateway } }: RootState) => ipfsGateway\n  );\n  const itemSize = useSelector(\n    ({ options: { itemSize } }: RootState) => itemSize\n  );\n\n  // Calculated\n  const containerWidth = window.innerWidth * 0.9;\n  const wrongNetWork = chainId !== configChainId;\n  const missingUri = dataByContract[activeContractAddress]\n    ? Object.values(dataByContract[activeContractAddress]).filter(\n        ({ uri }: any) => !uri\n      ).length\n    : null;\n  // Flag that indicates all URIs of the gallery have been obtained\n  const loadedUris =\n    dataByContract &&\n    dataByContract[activeContractAddress] &&\n    Object.values(dataByContract[activeContractAddress]).every(\n      (e: any) => e.uri\n    );\n\n  // States\n  // State of the modal, stores the tokenId to show or null if hidden\n  const [tokenModal, setTokenModal] = useState<number | null>(null);\n  // Stores Window sizes, it rerenders page with each resize\n  const [, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  // Stores the tokens with pending URIs\n  const [pendingUriTokens, setPendingUriTokens] = useState<number[]>([]);\n\n  // References\n  // Map of the Promises of the token images to be loaded after delay\n  const delayedImagesMap: any = useRef({});\n  // Map of the Promises of the tokens json to be loaded after delay\n  const delayedJsonMap: any = useRef({});\n  // Map of the images of the tokens already loaded\n  const imagesLoadedMap: any = useRef({});\n\n  // Contract hooks\n  const totalSupply = useTotalSupply(activeContractAddress);\n  const [initialToken] = useTokenByIndex(activeContractAddress, [0]);\n  const tokenURIs = useTokenURI(activeContractAddress, pendingUriTokens);\n\n  // Updates the state  with the window values\n  const resize = useCallback(() => {\n    if (window.innerWidth < 500) {\n      dispatch(setItemSize(120));\n    } else {\n      dispatch(setItemSize(200));\n    }\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n  }, [dispatch]);\n\n  // Effect to recalculate size\n  useEffect(() => {\n    resize();\n    window.addEventListener(\"resize\", () => {\n      resize();\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, [resize]);\n\n  // Effect to initialize store with the contract token skeleton data\n  const initialValue = initialToken ? initialToken[0] : null;\n  useEffect(() => {\n    if (initialValue && totalSupply && !dataByContract[activeContractAddress]) {\n      dispatch(\n        init({\n          totalSupply: totalSupply.toNumber(),\n          contractAddress: activeContractAddress,\n          initialValue: initialValue.toNumber()\n        })\n      );\n    }\n  }, [\n    dispatch,\n    totalSupply,\n    dataByContract,\n    activeContractAddress,\n    initialValue\n  ]);\n\n  // Effect that activates after totalSupply is obtained, and store has been initialized\n  // Finds the next tokens that have not got any uri\n  useEffect(() => {\n    if (totalSupply && dataByContract[activeContractAddress]) {\n      let list: number[] = [];\n      Object.keys(dataByContract[activeContractAddress]).forEach(key => {\n        if (!dataByContract[activeContractAddress][key].uri) {\n          list = [...list, parseInt(key)];\n        }\n      });\n\n      list = list.filter((_, index) => index <= 500);\n      if (\n        list.length &&\n        JSON.stringify(list) !== JSON.stringify(pendingUriTokens)\n      ) {\n        setPendingUriTokens(list);\n      }\n    }\n  }, [\n    setPendingUriTokens,\n    forceUpdate,\n    activeContractAddress,\n    dispatch,\n    totalSupply,\n    dataByContract,\n    pendingUriTokens\n  ]);\n\n  // Effect that dispatches the uris that are present from blockchain\n  // but not yet present in the store\n  const stringCache = JSON.stringify(tokenURIs);\n  useEffect(() => {\n    if (totalSupply && dataByContract[activeContractAddress]) {\n      let tokensToDispatch: any[] = [];\n      let tokensToDispatchIds: any[] = [];\n\n      pendingUriTokens.forEach((t, index) => {\n        if (tokenURIs[index] && !dataByContract[activeContractAddress][t].uri) {\n          tokensToDispatch = [\n            ...tokensToDispatch,\n            { tokenId: t, uri: tokenURIs[index][0] }\n          ];\n          tokensToDispatchIds = [...tokensToDispatchIds, t];\n        }\n      });\n\n      if (tokensToDispatch.length) {\n        dispatch(\n          setMetadataURI({\n            contractAddress: activeContractAddress,\n            tokens: tokensToDispatch\n          })\n        );\n      }\n    }\n  }, [\n    activeContractAddress,\n    stringCache,\n    pendingUriTokens,\n    totalSupply,\n    dataByContract,\n    dispatch,\n    tokenURIs\n  ]);\n\n  // Effect to load when a different contract address is detected\n  const prevActiveContractAddress = usePrevious(activeContractAddress);\n  useEffect(() => {\n    if (prevActiveContractAddress !== activeContractAddress) {\n      Object.values(delayedImagesMap.current).forEach((e: any) => {\n        if (e && e.controller) {\n          e.controller.abort();\n        }\n      });\n      Object.values(delayedJsonMap.current).forEach((e: any) => {\n        if (e && e.controller) {\n          e.controller.abort();\n        }\n      });\n      delayedImagesMap.current = {};\n      delayedJsonMap.current = {};\n      imagesLoadedMap.current = {};\n      setPendingUriTokens([]);\n    }\n  }, [activeContractAddress, prevActiveContractAddress]);\n\n  const delayCachedImage = useCallback(\n    async (\n      tokenId: number,\n      sleepTime: number,\n      signal: any,\n      imgSrc?: string\n    ) => {\n      await sleep(sleepTime, signal);\n\n      let img: any = null;\n      img = new window.Image();\n\n      let imgUrl =\n        imgSrc ?? dataByContract[activeContractAddress][tokenId].json.image;\n      if (imgUrl.startsWith(\"ipfs:\")) {\n        imgUrl = ipfsGatewayUrl(imgUrl, ipfsGateway);\n      }\n\n      img.src = imgUrl;\n      img.onload = () => {\n        if (!signal.aborted) {\n          imagesLoadedMap.current = {\n            ...imagesLoadedMap.current,\n            [tokenId]: img.src\n          };\n\n          let newDelayedImagesMap = { ...delayedImagesMap.current };\n          delete newDelayedImagesMap[tokenId];\n          delayedImagesMap.current = newDelayedImagesMap;\n\n          forceUpdate();\n        }\n      };\n      await sleep(10000, signal);\n\n      // If image is not loading, retry\n      if (!img.complete || !img.naturalWidth) {\n        img.src = \"\";\n\n        if (!signal.aborted) {\n          const controller = new AbortController();\n\n          const promise = delayCachedImage(tokenId, 0, signal, imgUrl);\n\n          let newDelayedImagesMap = { ...delayedImagesMap.current };\n          newDelayedImagesMap[tokenId] = { promise, controller };\n          delayedImagesMap.current = newDelayedImagesMap;\n        }\n      }\n    },\n    [activeContractAddress, dataByContract, forceUpdate, ipfsGateway]\n  );\n\n  // Callback for obtaining the JSON Metadata\n  const fetchTokenJSON = useCallback(\n    async (tokenId: number, signal: any) => {\n      if (\n        !dataByContract[activeContractAddress] ||\n        !dataByContract[activeContractAddress][tokenId]\n      ) {\n        return;\n      }\n      let uri = dataByContract[activeContractAddress][tokenId].uri;\n\n      try {\n        if (uri.startsWith(\"ipfs:\")) {\n          uri = ipfsGatewayUrl(uri, ipfsGateway);\n        } else if (corsProxyUrl) {\n          uri = corsProxyUrl + uri;\n        }\n\n        const response = await fetch(uri, { signal });\n        const data = await response.text();\n\n        dispatch(\n          setMetadataJSON({\n            contractAddress: activeContractAddress,\n            tokens: [{ tokenId, json: JSON.parse(data) }]\n          })\n        );\n\n        const controller = new AbortController();\n\n        const promise = delayCachedImage(\n          tokenId,\n          2000,\n          signal,\n          JSON.parse(data).image\n        );\n        delayedImagesMap.current = {\n          ...delayedImagesMap.current,\n          [tokenId]: { promise, controller }\n        };\n\n        return data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [\n      dataByContract,\n      activeContractAddress,\n      dispatch,\n      corsProxyUrl,\n      ipfsGateway,\n      delayCachedImage\n    ]\n  );\n\n  const onItemsRendered = ({\n    overscanStartIndex,\n    overscanStopIndex,\n    visibleStartIndex,\n    visibleStopIndex\n  }: any) => {\n    Object.values(delayedImagesMap.current).forEach((e: any) => {\n      if (e && e.controller) {\n        e.controller.abort();\n      }\n    });\n\n    Object.values(delayedJsonMap.current).forEach((e: any) => {\n      if (e && e.controller) {\n        e.controller.abort();\n      }\n    });\n\n    delayedImagesMap.current = {};\n    delayedJsonMap.current = {};\n\n    const times = Math.floor(containerWidth / itemSize);\n    const visibleFirstToken = visibleStartIndex * times;\n\n    let visibleLastToken = visibleStopIndex * times + times;\n    if (visibleLastToken > totalSupply.toNumber()) {\n      visibleLastToken = totalSupply.toNumber();\n    }\n\n    let jsonDelay = 1;\n    let imageDelay = 1;\n\n    for (let i = visibleFirstToken; i <= visibleLastToken; i++) {\n      const tokenId = parseInt(\n        Object.keys(dataByContract[activeContractAddress])[i]\n      );\n      if (\n        dataByContract[activeContractAddress][tokenId] &&\n        (dataByContract[activeContractAddress][tokenId].json\n          ? !dataByContract[activeContractAddress][tokenId].json.image\n          : true) &&\n        !delayedJsonMap.current[tokenId]\n      ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        const promise = delayJson(tokenId, jsonDelay * 1000, signal);\n        delayedJsonMap.current = {\n          ...delayedJsonMap.current,\n          [tokenId]: { promise, controller }\n        };\n        jsonDelay = jsonDelay + 1;\n      }\n\n      if (\n        dataByContract[activeContractAddress][tokenId] &&\n        dataByContract[activeContractAddress][tokenId].json &&\n        dataByContract[activeContractAddress][tokenId].json.image &&\n        !delayedImagesMap.current[tokenId] &&\n        !imagesLoadedMap.current[tokenId]\n      ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        const promise = delayCachedImage(\n          tokenId,\n          imageDelay * 2000,\n          signal,\n          dataByContract[activeContractAddress][tokenId].json.image\n        );\n        delayedImagesMap.current = {\n          ...delayedImagesMap.current,\n          [tokenId]: { promise, controller }\n        };\n        jsonDelay = jsonDelay + 1;\n      }\n    }\n  };\n\n  const delayJson = async (tokenId: number, sleepTime: number, signal: any) => {\n    await sleep(sleepTime, signal);\n    fetchTokenJSON(tokenId, signal);\n  };\n\n  // Function called for render the dinaymic table\n  const cellRenderer = ({ index, style, ref }: any) => {\n    const times = Math.floor(containerWidth / itemSize);\n    const start = index * times;\n    const cells = new Array(times)\n      .fill({})\n      .filter((_, index) => start + index < totalSupply.toNumber());\n\n    return (\n      <Flex direction=\"row\" justify=\"center\" style={style}>\n        {cells.map((_, index) => {\n          const tokenId = parseInt(\n            Object.keys(dataByContract[activeContractAddress])[start + index]\n          );\n\n          return (\n            <Link\n              key={`${tokenId}-${index}`}\n              onClick={() => {\n                imagesLoadedMap.current[tokenId] && setTokenModal(tokenId);\n              }}\n            >\n              <Box position=\"relative\" _hover={{ background: \"blue\" }}>\n                <Flex\n                  height={itemSize}\n                  width={itemSize}\n                  bg=\"gray.900\"\n                  opacity={imagesLoadedMap.current[tokenId] ? 0 : 1}\n                  position=\"absolute\"\n                  top=\"0\"\n                  _hover={{ opacity: \"0.9\" }}\n                  justify=\"center\"\n                  align=\"center\"\n                  direction=\"column\"\n                >\n                  <Text fontSize={40}>#{tokenId}</Text>\n                  {true ? (\n                    <Flex>\n                      <Text ml={2} fontSize={10}>\n                        {imagesLoadedMap.current[tokenId] &&\n                        dataByContract[activeContractAddress][tokenId].json &&\n                        dataByContract[activeContractAddress][tokenId].json.name\n                          ? dataByContract[activeContractAddress][tokenId].json\n                              .name\n                          : !delayedImagesMap.current[tokenId] &&\n                            !delayedJsonMap.current[tokenId]\n                          ? \"\\u00A0\"\n                          : !dataByContract[activeContractAddress][tokenId].json\n                          ? \"LOADING METADATA\"\n                          : \"LOADING IMAGE\"}\n                      </Text>\n                    </Flex>\n                  ) : null}\n                </Flex>\n                {imagesLoadedMap.current[tokenId] &&\n                dataByContract[activeContractAddress][tokenId] &&\n                dataByContract[activeContractAddress][tokenId].json &&\n                dataByContract[activeContractAddress][tokenId].json.image ? (\n                  <Image\n                    boxSize={itemSize}\n                    alt={`${tokenId}`}\n                    title={`${tokenId}`}\n                    loading=\"lazy\"\n                    src={imagesLoadedMap.current[tokenId]}\n                  />\n                ) : (\n                  <Flex height={itemSize} width={itemSize}></Flex>\n                )}\n              </Box>\n            </Link>\n          );\n        })}\n      </Flex>\n    );\n  };\n\n  return (\n    <Fragment>\n      {totalSupply && loadedUris ? (\n        <Fragment>\n          {tokenModal !== null ? (\n            <GalleryModal\n              tokenId={tokenModal}\n              imgUrl={imagesLoadedMap.current[tokenModal]}\n              onClose={() => {\n                setTokenModal(null);\n              }}\n            />\n          ) : null}\n\n          <Flex direction=\"column\" align=\"center\">\n            <Flex wrap=\"wrap\" justify=\"center\">\n              <div\n                id=\"virtualContainer\"\n                style={{ width: containerWidth, height: \"100%\" }}\n              >\n                <ReactWindowScroller listRef={listRef}>\n                  {({ ref, outerRef, style, onScroll }: any) => (\n                    <List\n                      style={style}\n                      outerRef={outerRef}\n                      ref={ref}\n                      height={window.innerHeight}\n                      itemCount={Math.ceil(\n                        totalSupply.toNumber() /\n                          Math.floor(containerWidth / itemSize)\n                      )}\n                      itemSize={itemSize}\n                      width={window.innerWidth}\n                      onScroll={onScroll}\n                      onItemsRendered={debounce(onItemsRendered, 1000)}\n                    >\n                      {cellRenderer}\n                    </List>\n                  )}\n                </ReactWindowScroller>\n              </div>\n            </Flex>\n          </Flex>\n        </Fragment>\n      ) : (\n        <Flex p={5} mt={8} align=\"center\" justify=\"center\" direction=\"column\">\n          <Box color=\"gray.700\">\n            <Spinner />\n          </Box>\n          <Box mt={2}>\n            <Text textAlign=\"center\">\n              {\" \"}\n              {!wrongNetWork\n                ? `Loading data from the blockchain, please wait`\n                : \"Please connect to Ethereum Network\"}\n            </Text>\n            <Text textAlign=\"center\">\n              {totalSupply && missingUri && missingUri < totalSupply.toNumber()\n                ? `[ ${missingUri.toLocaleString()} / ${\n                    totalSupply ? totalSupply.toNumber().toLocaleString() : \"\"\n                  } ]`\n                : \"\"}\n            </Text>\n          </Box>\n        </Flex>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Gallery;\n","// The name of the gateway should be included in the switch case on\n// src/helpers/ipfsGatewayUrl.ts\n\nconst ipsGateways: any[] = [\n  {\n    name: \"cloudflare-ipfs.com\"\n  },\n  {\n    name: \"dweb.link\"\n  },\n  {\n    name: \"infura-ipfs.io\"\n  },\n  {\n    name: \"gateway.pinata.cloud\"\n  },\n  {\n    name: \"ipfs.io\"\n  },\n  {\n    name: \"gateway.ipfs.io\"\n  },\n  {\n    name: \"ravencoinipfs-gateway.com\"\n  }\n];\n\nexport default ipsGateways;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Button,\n  Input,\n  Heading,\n  Select,\n  FormControl,\n  FormLabel,\n  Link\n} from \"@chakra-ui/react\";\n\nimport { RootState } from \"./redux/store\";\n\nimport { changeActiveContractAddress } from \"./redux/contractsSlice\";\nimport {\n  initialState as optionsInitialState,\n  setCorsProxyUrl,\n  setIpfsGateway\n} from \"./redux/optionsSlice\";\nimport presets from \"./presets\";\nimport ipfsGateways from \"./ipsGateways\";\n\nconst Header = () => {\n  const activeContractAddress = useSelector(\n    ({ contracts: { activeContractAddress } }: RootState) =>\n      activeContractAddress\n  );\n  const corsProxyUrl = useSelector(\n    ({ options: { corsProxyUrl } }: RootState) => corsProxyUrl\n  );\n  const ipfsGateway = useSelector(\n    ({ options: { ipfsGateway } }: RootState) => ipfsGateway\n  );\n  const dispatch = useDispatch();\n  const [formContractAddress, setFormContractAddress] = useState<string>(\n    activeContractAddress\n  );\n  const [formIpfsGatewayUrl, serFormIpfsGatewayUrl] = useState<string>(\n    ipfsGateway\n  );\n  const [firstFormIpfsGatewayUrl, setFirstFormIpfsGatewayUrl] = useState<\n    string\n  >(ipfsGateway);\n  const [preset, setPreset] = useState(\n    presets.find(({ address }) => address === activeContractAddress)\n      ? presets.find(({ address }) => address === activeContractAddress).address\n      : \"\"\n  );\n  const [showOptions, setShowOptions] = useState<boolean>(false);\n  const [formCorsProxyUrl, setFormCorsProxyUrl] = useState<string>(\n    corsProxyUrl == null ? \"\" : corsProxyUrl\n  );\n  const [firstFormCorsProxyUrl, setFirstFormCorsProxyUrl] = useState<\n    string | null\n  >(corsProxyUrl == null ? \"\" : corsProxyUrl);\n\n  let presetsSorted = presets;\n  presetsSorted.sort((a, b) => a.name.localeCompare(b.name));\n  return (\n    <Box\n      id=\"header\"\n      as=\"header\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      width=\"100%\"\n      p={0}\n      alignItems=\"center\"\n    >\n      <Flex\n        borderRadius=\"20px\"\n        bg=\"gray.600\"\n        p={4}\n        m={5}\n        justify=\"center\"\n        maxWidth=\"827px\"\n      >\n        <Flex direction=\"column\">\n          <Heading textAlign=\"center\" as=\"h1\">\n            NFT Explorer\n          </Heading>\n          <Box pt={5} pb={5} pl={5} pr={5}>\n            Enter an<b> Ethereum ERC721</b> Contract Address with the\n            <b>\n              {\" \"}\n              <Link href=\"https://eips.ethereum.org/EIPS/eip-721\">\n                ERC721Enumerable\n              </Link>\n            </b>{\" \"}\n            Extension, or select one of the available Collection presets. Data\n            will be dynamically fetched as you scroll.\n          </Box>\n          <Flex\n            justify=\"space-around\"\n            align=\"center\"\n            height=\"100%\"\n            direction={{ base: \"column\", md: \"row\" }}\n          >\n            <Select\n              width={{ base: \"100%\", md: \"180px\" }}\n              onChange={({ target: { value } }) => {\n                setPreset(value);\n                if (value) {\n                  setFormContractAddress(value);\n                  dispatch(changeActiveContractAddress(value));\n                }\n              }}\n              value={preset}\n            >\n              {presetsSorted.map(({ name, address }) => (\n                <option key={address} value={address}>\n                  {name}\n                </option>\n              ))}\n              <option key=\"other\" value=\"\">\n                Other\n              </option>\n            </Select>\n            <Input\n              mt={{ base: 2, md: 0 }}\n              ml=\"5px\"\n              width={{ base: \"100%\", md: \"445px\" }}\n              placeholder=\"Address\"\n              value={formContractAddress}\n              onChange={({ target: { value } }) => {\n                setFormContractAddress(value);\n              }}\n            />\n            <Flex mt={{ base: 2, md: 0 }}>\n              <Button\n                ml=\"5px\"\n                onClick={() => {\n                  dispatch(changeActiveContractAddress(formContractAddress));\n\n                  setPreset(\n                    presets.find(\n                      ({ address }) => address === formContractAddress\n                    )\n                      ? presets.find(\n                          ({ address }) => address === formContractAddress\n                        ).address\n                      : \"\"\n                  );\n                }}\n              >\n                Go\n              </Button>\n              <Button\n                ml=\"5px\"\n                onClick={() => {\n                  setShowOptions(!showOptions);\n                }}\n              >\n                Options\n              </Button>\n            </Flex>\n          </Flex>\n          {showOptions ? (\n            <Flex\n              direction=\"column\"\n              m={4}\n              p={4}\n              borderWidth=\"2px\"\n              borderRadius=\"12px\"\n            >\n              <Flex direction=\"column\">\n                <FormControl id=\"corsProxy\">\n                  <FormLabel>CORS Proxy</FormLabel>\n                  <Input\n                    ml=\"5px\"\n                    placeholder=\"\"\n                    value={formCorsProxyUrl}\n                    onChange={({ target: { value } }) => {\n                      setFormCorsProxyUrl(value);\n                    }}\n                  />\n                </FormControl>\n                <FormControl id=\"ipfsGateway\" mt={3}>\n                  <FormLabel>IPFS Gateway</FormLabel>\n                  <Select\n                    value={formIpfsGatewayUrl}\n                    onChange={({ target: { value } }) => {\n                      serFormIpfsGatewayUrl(value);\n                    }}\n                  >\n                    {ipfsGateways.map(({ name }) => (\n                      <option key={name} value={name}>\n                        {name}\n                      </option>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Flex>\n              <Flex mt={3} justify=\"end\">\n                <Button\n                  onClick={() => {\n                    dispatch(setCorsProxyUrl(formCorsProxyUrl));\n                    dispatch(setIpfsGateway(formIpfsGatewayUrl));\n                    setShowOptions(false);\n                    setFirstFormIpfsGatewayUrl(formIpfsGatewayUrl);\n                    setFirstFormCorsProxyUrl(formCorsProxyUrl);\n                  }}\n                  isDisabled={\n                    firstFormCorsProxyUrl === formCorsProxyUrl &&\n                    firstFormIpfsGatewayUrl === formIpfsGatewayUrl\n                  }\n                >\n                  Update\n                </Button>\n                <Button\n                  ml={2}\n                  isDisabled={\n                    optionsInitialState.corsProxyUrl === formCorsProxyUrl &&\n                    optionsInitialState.ipfsGateway === formIpfsGatewayUrl\n                  }\n                  onClick={() => {\n                    setFormCorsProxyUrl(\n                      optionsInitialState.corsProxyUrl == null\n                        ? \"\"\n                        : optionsInitialState.corsProxyUrl\n                    );\n                    serFormIpfsGatewayUrl(optionsInitialState.ipfsGateway);\n                    dispatch(setCorsProxyUrl(optionsInitialState.corsProxyUrl));\n                    dispatch(setIpfsGateway(optionsInitialState.ipfsGateway));\n                    setShowOptions(false);\n                    setFirstFormIpfsGatewayUrl(optionsInitialState.ipfsGateway);\n                    setFirstFormCorsProxyUrl(optionsInitialState.corsProxyUrl);\n                  }}\n                >\n                  Reset\n                </Button>\n              </Flex>\n            </Flex>\n          ) : null}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\nexport default Header;\n","import { useEffect, useState, Fragment } from \"react\";\nimport { Box, Flex, Link } from \"@chakra-ui/react\";\nimport { RootState } from \"./redux/store\";\nimport useTokenByIndex from \"./hooks/useTokenByIndex\";\nimport useTotalSupply from \"./hooks/useTotalSupply\";\nimport { useSelector } from \"react-redux\";\n\nconst Navigator = ({ listRef }) => {\n  const containerWidth = window.innerWidth * 0.9;\n\n  const activeContractAddress = useSelector(\n    ({ contracts: { activeContractAddress } }: RootState) =>\n      activeContractAddress\n  );\n  const dataByContract = useSelector(\n    ({ contracts: { dataByContract } }: RootState) => dataByContract\n  );\n  const itemSize = useSelector(\n    ({ options: { itemSize } }: RootState) => itemSize\n  );\n\n  const totalSupply = useTotalSupply(activeContractAddress);\n  const [tokensByIndex] = useTokenByIndex(activeContractAddress, [0]);\n  const initialValue = tokensByIndex ? tokensByIndex[0] : null;\n\n  const [indicatorPosition, setIndicatorPosition] = useState({ x: 50, y: 0 });\n  const [scrollPercentage, setScrollPercentage] = useState(0);\n  useEffect(() => {\n    const fn = (e: any) => {\n      const yPos =\n        (window.scrollY / document.body.offsetHeight) * window.innerHeight;\n\n      setScrollPercentage(window.scrollY / document.body.offsetHeight);\n      setIndicatorPosition({ x: indicatorPosition.x, y: yPos });\n    };\n\n    window.addEventListener(\"scroll\", fn);\n    return () => {\n      window.removeEventListener(\"scroll\", fn);\n    };\n  }, [indicatorPosition]);\n\n  const numItems = 8;\n  let chunks: number[] = [];\n  if (\n    totalSupply &&\n    initialValue &&\n    dataByContract[activeContractAddress] &&\n    Object.values(dataByContract[activeContractAddress]).length\n  ) {\n    let increase = Math.floor(totalSupply.toNumber() / (numItems + 1));\n    let items: any = [];\n    for (let i = 1; i < numItems + 1; i++) {\n      items = [\n        ...items,\n        items.length ? items[items.length - 1] + increase : increase\n      ];\n    }\n\n    chunks = [\n      initialValue.toNumber(),\n      ...items,\n      Object.keys(dataByContract[activeContractAddress])[\n        Object.keys(dataByContract[activeContractAddress]).length - 1\n      ]\n    ];\n  }\n\n  const loadedUris =\n    dataByContract &&\n    dataByContract[activeContractAddress] &&\n    Object.values(dataByContract[activeContractAddress]).every(\n      (e: any) => e.uri\n    );\n\n  const isReady =\n    loadedUris &&\n    totalSupply &&\n    initialValue &&\n    dataByContract[activeContractAddress];\n  const offset = 1000;\n  let itemView = totalSupply ? totalSupply.toNumber() * scrollPercentage : 1;\n\n  return isReady ? (\n    <Fragment>\n      <Flex\n        position=\"fixed\"\n        right=\"0\"\n        top=\"0\"\n        width=\"70px\"\n        height=\"100vh\"\n        direction=\"column\"\n        justify=\"space-between\"\n      >\n        {chunks.map((num, index) => {\n          let growthPercentage: number | null = null;\n          if (itemView >= num && itemView < num + offset) {\n            growthPercentage = itemView === 0 ? 0 : (itemView - num) / offset;\n          } else if (itemView <= num && itemView > num - offset) {\n            growthPercentage = (num - itemView) / offset;\n          }\n          return (\n            <Box\n              key={index}\n              textAlign=\"end\"\n              mr={2}\n              fontSize={\n                growthPercentage != null ? 20 - 10 * growthPercentage : 10\n              }\n            >\n              <Link\n                onClick={() => {\n                  const times = Math.floor(containerWidth / itemSize);\n                  const numTo = Math.floor(num / times);\n                  listRef.current.scrollToItem(numTo, \"start\");\n                }}\n              >\n                {num}\n              </Link>\n            </Box>\n          );\n        })}\n      </Flex>\n      <Box\n        display=\"none\"\n        position=\"fixed\"\n        fontSize={10}\n        right={indicatorPosition.x}\n        top={indicatorPosition.y}\n      >\n        -\n      </Box>\n    </Fragment>\n  ) : null;\n};\nexport default Navigator;\n","import { createRef } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport \"./App.css\";\n\nimport Gallery from \"./Gallery\";\nimport Header from \"./Header\";\nimport Navigator from \"./Navigator\";\n\nconst App = () => {\n  const listRef = createRef();\n  return (\n    <Box pr=\"30px\">\n      <Navigator listRef={listRef} />\n      <Header />\n      <Box as=\"main\" pt=\"10px\">\n        <Gallery listRef={listRef} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default App;\n","import { extendTheme, ThemeConfig } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false\n};\n\nconst theme = extendTheme({ config });\nexport default theme;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contractsReducer from \"./contractsSlice\";\nimport optionsReducer from \"./optionsSlice\";\nimport { save, load } from \"redux-localstorage-simple\";\n\nconst store = configureStore({\n  reducer: {\n    contracts: contractsReducer,\n    options: optionsReducer\n  },\n  middleware: [\n    save({ states: [\"contracts\", \"options\"], namespace: \"localdata\" })\n  ],\n  preloadedState: load({\n    states: [\"contracts\", \"options\"],\n    namespace: \"localdata\"\n  })\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport { DAppProvider } from \"@usedapp/core\";\nimport { ColorModeScript } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport { configChainId, alchemyApi } from \"./constants\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst config = {\n  readOnlyChainId: configChainId,\n  readOnlyUrls: {\n    [configChainId]: alchemyApi\n  }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <DAppProvider config={config}>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </DAppProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}