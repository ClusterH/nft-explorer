{"version":3,"sources":["ReactWindowScroller.jsx","presets.ts","redux/contractsSlice.ts","constants.ts","redux/optionsSlice.ts","hooks/useTotalSupply.ts","hooks/useTokenURI.ts","hooks/useTokenByIndex.ts","hooks/usePrevious.ts","hooks/useForceUpdate.ts","GalleryModal.tsx","helpers/ipfsGatewayUrl.ts","helpers/sleep.ts","Gallery.tsx","ipsGateways.ts","Header.tsx","Navigator.tsx","App.tsx","theme.ts","redux/store.ts","index.tsx"],"names":["windowScrollPositionKey","y","x","documentScrollPositionKey","getScrollPosition","axis","window","document","documentElement","body","ReactWindowScroller","children","throttleTime","isGrid","listRef","outerRef","useRef","ref","useEffect","handleWindowScroll","throttle","current","offsetTop","offsetLeft","scrollTop","scrollLeft","scrollTo","addEventListener","cancel","removeEventListener","onScroll","useCallback","scrollOffset","scrollUpdateWasRequested","top","left","Math","min","style","width","height","display","presets","name","address","options","cors","initialState","dataByContract","lastUsedByContract","missingUriByContract","activeContractAddress","Object","values","floor","random","length","contractsSlice","createSlice","reducers","init","state","action","payload","contractAddress","contractMap","tokens","i","initialValue","totalSupply","push","Date","now","setMetadataURI","forEach","tokenId","uri","keys","filter","map","e","parseInt","setMetadataJSON","json","image","changeActiveContractAddress","actions","process","REACT_APP_ALCHEMY_API","REACT_APP_CHAIN_ID","REACT_APP_ETHERSCAN_URL","REACT_APP_SITE_URL","REACT_APP_PROXY_URL","alchemyApi","configChainId","corsProxyUrl","ipfsGateway","itemSize","optionsSlice","setCorsProxyUrl","setIpfsGateway","setItemSize","contractInterface","ethers","utils","Interface","ERC721","abi","useTotalSupply","useContractCall","method","args","useTokenURI","indexes","useContractCalls","index","useTokenByIndex","usePrevious","value","useForceUpdate","useState","setValue","GalleryModal","imgUrl","onClose","resize","innerWidth","innerHeight","windowSize","setWindowSize","dimension","setDimension","isOpen","closeOnOverlayClick","motionPreset","size","margin","bg","justifyContent","onClick","element","target","classList","contains","justify","align","className","maxWidth","objectFit","src","ipfsGatewayUrl","hash","slice","splitHash","split","transformedHash","cids","toV1","toString","sleep","ms","signal","Promise","resolve","reject","timeout","setTimeout","clearTimeout","Gallery","forceUpdate","chainId","useEthers","dispatch","useDispatch","useSelector","contracts","containerWidth","wrongNetWork","loadedUris","tokenModal","setTokenModal","pendingUriTokens","setPendingUriTokens","delayedImagesMap","delayedJsonMap","imagesLoadedMap","initialToken","tokenURIs","toNumber","list","_","JSON","stringify","stringCache","tokensToDispatch","tokensToDispatchIds","t","prevActiveContractAddress","controller","abort","delayCachedImage","sleepTime","imgSrc","a","img","Image","startsWith","onload","aborted","newDelayedImagesMap","complete","naturalWidth","AbortController","promise","fetchTokenJSON","fetch","response","text","data","parse","console","log","onItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","times","visibleFirstToken","visibleLastToken","jsonDelay","delayJson","imageDelay","cellRenderer","start","cells","Array","fill","direction","position","_hover","background","opacity","fontSize","base","sm","md","toLocaleString","ml","boxSize","alt","title","loading","wrap","id","itemCount","ceil","debounce","p","mt","color","textAlign","ipsGateways","Header","formContractAddress","setFormContractAddress","formIpfsGatewayUrl","serFormIpfsGatewayUrl","firstFormIpfsGatewayUrl","setFirstFormIpfsGatewayUrl","find","preset","setPreset","showOptions","setShowOptions","formCorsProxyUrl","setFormCorsProxyUrl","firstFormCorsProxyUrl","setFirstFormCorsProxyUrl","presetsSorted","sort","b","localeCompare","as","flexDirection","alignItems","borderRadius","m","pt","pb","pl","pr","href","onChange","placeholder","borderWidth","ipfsGateways","isDisabled","optionsInitialState","Navigator","tokensByIndex","indicatorPosition","setIndicatorPosition","ratio","setRatio","fn","yPos","scrollY","offsetHeight","chunks","increase","items","numItems","isReady","offset","itemView","right","num","growthPercentage","mr","numTo","scrollToItem","App","createRef","theme","extendTheme","config","initialColorMode","useSystemColorMode","store","configureStore","reducer","contractsReducer","optionsReducer","middleware","save","states","namespace","preloadedState","load","readOnlyChainId","readOnlyUrls","ReactDOM","render","StrictMode","DAppProvider","getElementById"],"mappings":"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","file":"static/js/main.66915e54.chunk.js","sourcesContent":["import { useRef, useEffect, useCallback } from \"react\";\nimport throttle from \"lodash/throttle\";\n\nconst windowScrollPositionKey: any = {\n  y: \"pageYOffset\",\n  x: \"pageXOffset\"\n};\n\nconst documentScrollPositionKey: any = {\n  y: \"scrollTop\",\n  x: \"scrollLeft\"\n};\n\nconst getScrollPosition = (axis: any) =>\n  window[windowScrollPositionKey[axis]] ||\n  document.documentElement[documentScrollPositionKey[axis]] ||\n  document.body[documentScrollPositionKey[axis]] ||\n  0;\n\nexport const ReactWindowScroller = ({\n  children,\n  throttleTime = 10,\n  isGrid = false,\n  listRef\n}) => {\n  // const ref = useRef();\n  const outerRef = useRef();\n  const ref = listRef;\n\n  useEffect(() => {\n    const handleWindowScroll = throttle(() => {\n      const { offsetTop = 0, offsetLeft = 0 } = outerRef.current || {};\n      const scrollTop = getScrollPosition(\"y\") - offsetTop;\n      const scrollLeft = getScrollPosition(\"x\") - offsetLeft;\n      if (isGrid)\n        ref.current && ref.current.scrollTo({ scrollLeft, scrollTop });\n      if (!isGrid) ref.current && ref.current.scrollTo(scrollTop);\n    }, throttleTime);\n\n    window.addEventListener(\"scroll\", handleWindowScroll);\n    return () => {\n      handleWindowScroll.cancel();\n      window.removeEventListener(\"scroll\", handleWindowScroll);\n    };\n  }, [isGrid, ref, throttleTime]);\n\n  const onScroll = useCallback(\n    ({ scrollLeft, scrollTop, scrollOffset, scrollUpdateWasRequested }) => {\n      if (!scrollUpdateWasRequested) return;\n      const top = getScrollPosition(\"y\");\n      const left = getScrollPosition(\"x\");\n      const { offsetTop = 0, offsetLeft = 0 } = outerRef.current || {};\n\n      scrollOffset += Math.min(top, offsetTop);\n      scrollTop += Math.min(top, offsetTop);\n      scrollLeft += Math.min(left, offsetLeft);\n\n      if (!isGrid && scrollOffset !== top) window.scrollTo(0, scrollOffset);\n      if (isGrid && (scrollTop !== top || scrollLeft !== left)) {\n        window.scrollTo(scrollLeft, scrollTop);\n      }\n    },\n    [isGrid]\n  );\n\n  return children({\n    ref,\n    outerRef,\n    style: {\n      width: isGrid ? \"auto\" : \"100%\",\n      height: \"100%\",\n      display: \"inline-block\"\n    },\n    onScroll\n  });\n};\n","const presets: any[] = [\n  {\n    name: \"Pudgy Penguins\",\n    address: \"0xBd3531dA5CF5857e7CfAA92426877b022e612cf8\"\n  },\n  { name: \"Cool Cats\", address: \"0x1A92f7381B9F03921564a437210bB9396471050C\" },\n  {\n    name: \"Boonji Project\",\n    address: \"0x4cd0ea8b1bDb5ab9249d96cCF3d8A0d3aDa2Bc76\"\n  },\n  {\n    name: \"Lazy Lions\",\n    address: \"0x8943C7bAC1914C9A7ABa750Bf2B6B09Fd21037E0\",\n    options: { cors: true }\n  },\n  {\n    name: \"World Of Women\",\n    address: \"0xe785E82358879F061BC3dcAC6f0444462D4b5330\",\n    options: { cors: true }\n  },\n  {\n    name: \"Creature World\",\n    address: \"0xc92cedDfb8dd984A89fb494c376f9A48b999aAFc\",\n    options: { cors: true }\n  },\n  {\n    name: \"DeadFellaz\",\n    address: \"0x2acAb3DEa77832C09420663b0E1cB386031bA17B\",\n    options: { cors: true }\n  },\n  {\n    name: \"Stoner Cats\",\n    address: \"0xD4d871419714B778eBec2E22C7c53572b573706e\",\n    options: { cors: true }\n  },\n  {\n    name: \"Desperate ApeWives\",\n    address: \"0xF1268733C6FB05EF6bE9cF23d24436Dcd6E0B35E\",\n    options: { cors: true }\n  },\n  {\n    name: \"Bored Ape Yacht Club\",\n    address: \"0xBC4CA0EdA7647A8aB7C2061c2E118A18a936f13D\",\n    options: { cors: true }\n  },\n  {\n    name: \"CryptoMories\",\n    address: \"0x1a2F71468F656E97c2F86541E57189F59951efe7\",\n    options: { cors: true }\n  },\n  {\n    name: \"Outlaw Gals\",\n    address: \"0x62EFd38a5efd7cfDB1c6E1c50F3083Af636D1b40\",\n    options: { cors: true }\n  },\n  {\n    name: \"MutantCats\",\n    address: \"0xaAdBA140Ae5e4c8a9eF0Cc86EA3124b446e3E46A\",\n    options: { cors: true }\n  }\n];\n\nexport default presets;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport presets from \"../presets\";\n\ninterface ContractState {\n  activeContractAddress: string;\n  dataByContract: any;\n}\n\nconst initialState: ContractState = {\n  dataByContract: {},\n  lastUsedByContract: {},\n  missingUriByContract: {},\n  // Start with a random address from presets\n  activeContractAddress: Object.values(presets)[\n    Math.floor(Math.random() * Object.values(presets).length)\n  ].address\n};\n\nexport const contractsSlice = createSlice({\n  name: \"contracts\",\n  initialState,\n  reducers: {\n    init: (state, action) => {\n      if (!state.dataByContract[action.payload.contractAddress]) {\n        let contractMap: { [index: number]: any } = {};\n        let tokens = [];\n        for (\n          let i = action.payload.initialValue;\n          i < action.payload.totalSupply + action.payload.initialValue;\n          i++\n        ) {\n          contractMap[i] = {};\n          tokens.push(i);\n        }\n        state.dataByContract[action.payload.contractAddress] = contractMap;\n        state.lastUsedByContract[action.payload.contractAddress] = Date.now();\n        state.missingUriByContract[action.payload.contractAddress] = tokens;\n      }\n    },\n    setMetadataURI: (state, action) => {\n      action.payload.tokens.forEach(({ tokenId, uri }: any) => {\n        state.dataByContract[action.payload.contractAddress][tokenId].uri = uri;\n      });\n      state.missingUriByContract[action.payload.contractAddress] = Object.keys(\n        state.dataByContract[action.payload.contractAddress]\n      )\n        .filter(\n          tokenId =>\n            !state.dataByContract[action.payload.contractAddress][tokenId].uri\n        )\n        .map(e => parseInt(e));\n    },\n    setMetadataJSON: (state, action) => {\n      action.payload.tokens.forEach(({ tokenId, json }: any) => {\n        state.dataByContract[action.payload.contractAddress][tokenId].json = {\n          image: json.image,\n          name: json.name\n        };\n      });\n    },\n    changeActiveContractAddress: (state, action) => {\n      state.activeContractAddress = action.payload;\n      state.lastUsedByContract[action.payload] = Date.now();\n    }\n  }\n});\n\nexport const {\n  setMetadataURI,\n  setMetadataJSON,\n  changeActiveContractAddress,\n  init\n} = contractsSlice.actions;\n\nexport default contractsSlice.reducer;\n","const {\n  REACT_APP_ALCHEMY_API,\n  REACT_APP_CHAIN_ID,\n  REACT_APP_ETHERSCAN_URL,\n  REACT_APP_SITE_URL,\n  REACT_APP_PROXY_URL\n} = process.env;\n\nexport const alchemyApi: string = `${REACT_APP_ALCHEMY_API}`;\nexport const configChainId: number = REACT_APP_CHAIN_ID\n  ? parseInt(REACT_APP_CHAIN_ID)\n  : 0;\nexport const etherScanUrl: string = `${REACT_APP_ETHERSCAN_URL}`;\nexport const siteUrl: string = `${REACT_APP_SITE_URL}`;\nexport const proxyUrl: string = `${REACT_APP_PROXY_URL}`;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { proxyUrl } from \"../constants\";\n\ninterface OptionState {\n  corsProxyUrl: string | null;\n  ipfsGateway: string;\n  itemSize: number;\n}\n\nexport const initialState: OptionState = {\n  corsProxyUrl: proxyUrl,\n  ipfsGateway: \"infura-ipfs.io\",\n  itemSize: 200\n};\n\nexport const optionsSlice = createSlice({\n  name: \"options\",\n  initialState,\n  reducers: {\n    setCorsProxyUrl: (state, action) => {\n      state.corsProxyUrl = action.payload;\n    },\n    setIpfsGateway: (state, action) => {\n      state.ipfsGateway = action.payload;\n    },\n    setItemSize: (state, action) => {\n      state.itemSize = action.payload;\n    }\n  }\n});\n\nexport const {\n  setCorsProxyUrl,\n  setIpfsGateway,\n  setItemSize\n} = optionsSlice.actions;\n\nexport default optionsSlice.reducer;\n","import { ethers } from \"ethers\";\nimport { useContractCall } from \"@usedapp/core\";\nimport ERC721 from \"../abi/ERC721.json\";\n// import { contractAddress } from \"../constants.js\";\n\nconst contractInterface = new ethers.utils.Interface(ERC721.abi);\n\nconst useTotalSupply = (contractAddress: string) => {\n  const [totalSupply]: any =\n    useContractCall({\n      abi: contractInterface,\n      address: contractAddress,\n      method: \"totalSupply\",\n      args: []\n    }) ?? [];\n  return totalSupply;\n};\nexport default useTotalSupply;\n","import { ethers } from \"ethers\";\nimport { useContractCalls } from \"@usedapp/core\";\nimport ERC721 from \"../abi/ERC721.json\";\n// import { contractAddress } from \"../constants.js\";\n\nconst contractInterface = new ethers.utils.Interface(ERC721.abi);\n\nconst useTokenURI = (contractAddress: string, indexes: number[]) => {\n  const tokenURI: any =\n    useContractCalls(\n      indexes.map(index => ({\n        abi: contractInterface,\n        address: contractAddress,\n        method: \"tokenURI\",\n        args: [index]\n      }))\n    ) ?? null;\n  return tokenURI;\n};\nexport default useTokenURI;\n","import { ethers } from \"ethers\";\nimport { useContractCalls } from \"@usedapp/core\";\nimport ERC721 from \"../abi/ERC721.json\";\n\nconst contractInterface = new ethers.utils.Interface(ERC721.abi);\n\nconst useTokenByIndex = (contractAddress: string, indexes: number[]) => {\n  const tokenByIndex: any =\n    useContractCalls(\n      indexes.map(index => ({\n        abi: contractInterface,\n        address: contractAddress,\n        method: \"tokenByIndex\",\n        args: [index]\n      }))\n    ) ?? null;\n  return tokenByIndex;\n};\nexport default useTokenByIndex;\n","import { useEffect, useRef } from \"react\";\nconst usePrevious = (value: any) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\nexport default usePrevious;\n","import { useState } from \"react\";\nconst useForceUpdate = () => {\n  const [, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n};\nexport default useForceUpdate;\n","import { useState, useEffect } from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalBody,\n  Image,\n  Flex\n} from \"@chakra-ui/react\";\n\nconst GalleryModal = ({ tokenId, imgUrl, onClose }: GalleryModalProps) => {\n  useEffect(() => {\n    resize();\n    window.addEventListener(\"resize\", () => {\n      resize();\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  const [dimension, setDimension] = useState(\"width\");\n\n  const resize = () => {\n    if (window.innerWidth > window.innerHeight) {\n      setDimension(\"height\");\n    } else {\n      setDimension(\"width\");\n    }\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n  };\n\n  return (\n    <Modal\n      isOpen={tokenId !== null}\n      onClose={onClose}\n      closeOnOverlayClick\n      motionPreset=\"none\"\n      size={\"full\"}\n    >\n      <ModalOverlay />\n      <ModalContent margin=\"0\" bg=\"rgba(0,0,0,0.5)\">\n        <ModalBody\n          display=\"flex\"\n          justifyContent=\"center\"\n          onClick={e => {\n            const element = e.target as HTMLElement;\n            if (\n              element.classList.contains(\"chakra-modal__body\") ||\n              element.classList.contains(\"image-container\")\n            ) {\n              onClose();\n            }\n          }}\n        >\n          <Flex\n            height=\"\"\n            justify=\"center\"\n            align=\"center\"\n            className=\"image-container\"\n          >\n            <Image\n              maxWidth=\"none\"\n              height={\n                dimension === \"height\"\n                  ? `calc(${windowSize.height}px - 50px)`\n                  : \"auto\"\n              }\n              width={dimension === \"width\" ? \"calc(100vw - 50px)\" : \"auto\"}\n              objectFit=\"cover\"\n              src={imgUrl}\n            />\n          </Flex>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport interface GalleryModalProps {\n  tokenId: number;\n  imgUrl: string;\n  onClose: () => any;\n}\nexport default GalleryModal;\n","import cids from \"cids\";\nconst ipfsGatewayUrl = (uri: string, ipfsGateway: string): string => {\n  const hash = uri.slice(7);\n  switch (ipfsGateway) {\n    case \"cloudflare-ipfs.com\":\n    case \"gateway.pinata.cloud\":\n    case \"ipfs.io\":\n    case \"gateway.ipfs.io\":\n    case \"ravencoinipfs-gateway.com\":\n      return `https://${ipfsGateway}/ipfs/${hash}`;\n    case \"dweb.link\":\n    case \"infura-ipfs.io\":\n      const splitHash = hash.split(\"/\");\n      const transformedHash = new cids(splitHash[0]).toV1().toString(\"base32\");\n      return `https://${transformedHash}.ipfs.${ipfsGateway}${\n        splitHash[1] ? `/${splitHash[1]}` : \"\"\n      }`;\n  }\n  return uri;\n};\nexport default ipfsGatewayUrl;\n","const sleep = (ms: number, signal?: any) =>\n  new Promise((resolve, reject) => {\n    let timeout: any;\n\n    const abortHandler = () => {\n      clearTimeout(timeout);\n      //reject();\n    };\n\n    timeout = setTimeout(resolve, ms);\n\n    signal?.addEventListener(\"abort\", abortHandler);\n    return timeout;\n  });\nexport default sleep;\n","import { Fragment, useEffect, useState, useRef, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FixedSizeList as List } from \"react-window\";\nimport { ReactWindowScroller } from \"./ReactWindowScroller\";\n// import { RouteComponentProps } from \"@reach/router\";\nimport { useEthers } from \"@usedapp/core\";\nimport { Flex, Box, Text, Spinner, Link, Image } from \"@chakra-ui/react\";\nimport debounce from \"debounce\";\n\nimport { init, setMetadataURI, setMetadataJSON } from \"./redux/contractsSlice\";\nimport { setItemSize } from \"./redux/optionsSlice\";\nimport { RootState } from \"./redux/store\";\n\nimport useTotalSupply from \"./hooks/useTotalSupply\";\nimport useTokenURI from \"./hooks/useTokenURI\";\nimport useTokenByIndex from \"./hooks/useTokenByIndex\";\nimport usePrevious from \"./hooks/usePrevious\";\nimport useForceUpdate from \"./hooks/useForceUpdate\";\n\nimport { configChainId } from \"./constants\";\n\nimport GalleryModal from \"./GalleryModal\";\n\nimport ipfsGatewayUrl from \"./helpers/ipfsGatewayUrl\";\nimport sleep from \"./helpers/sleep\";\n\nconst Gallery = ({ listRef }) => {\n  // Common hooks\n  const forceUpdate = useForceUpdate();\n\n  // useDapp hooks\n  const { chainId } = useEthers();\n\n  // Redux\n  const dispatch = useDispatch();\n  const dataByContract = useSelector(\n    ({ contracts: { dataByContract } }: RootState) => dataByContract\n  );\n  const activeContractAddress = useSelector(\n    ({ contracts: { activeContractAddress } }: RootState) =>\n      activeContractAddress\n  );\n  const missingUriByContract = useSelector(\n    ({ contracts: { missingUriByContract } }: RootState) => missingUriByContract\n  );\n  const corsProxyUrl = useSelector(\n    ({ options: { corsProxyUrl } }: RootState) => corsProxyUrl\n  );\n  const ipfsGateway = useSelector(\n    ({ options: { ipfsGateway } }: RootState) => ipfsGateway\n  );\n  const itemSize = useSelector(\n    ({ options: { itemSize } }: RootState) => itemSize\n  );\n\n  // Calculated\n  const containerWidth = window.innerWidth * 0.9;\n  const wrongNetWork = chainId !== configChainId;\n  // Flag that indicates all URIs of the gallery have been obtained\n  const loadedUris =\n    missingUriByContract[activeContractAddress] &&\n    missingUriByContract[activeContractAddress].length === 0;\n  // States\n  // State of the modal, stores the tokenId to show or null if hidden\n  const [tokenModal, setTokenModal] = useState<number | null>(null);\n  // Stores Window sizes, it rerenders page with each resize\n  const [, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  // Stores the tokens with pending URIs\n  const [pendingUriTokens, setPendingUriTokens] = useState<number[]>([]);\n\n  // References\n  // Map of the Promises of the token images to be loaded after delay\n  const delayedImagesMap: any = useRef({});\n  // Map of the Promises of the tokens json to be loaded after delay\n  const delayedJsonMap: any = useRef({});\n  // Map of the images of the tokens already loaded\n  const imagesLoadedMap: any = useRef({});\n\n  // Contract hooks\n  const totalSupply = useTotalSupply(activeContractAddress);\n  const [initialToken] = useTokenByIndex(activeContractAddress, [0]);\n  const tokenURIs = useTokenURI(activeContractAddress, pendingUriTokens);\n\n  // Updates the state  with the window values\n  const resize = useCallback(() => {\n    if (window.innerWidth < 500) {\n      dispatch(setItemSize(100));\n    } else {\n      dispatch(setItemSize(200));\n    }\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n  }, [dispatch]);\n\n  // Effect to recalculate size\n  useEffect(() => {\n    resize();\n    window.addEventListener(\"resize\", () => {\n      resize();\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, [resize]);\n\n  // Effect to initialize store with the contract token skeleton data\n  const initialValue = initialToken ? initialToken[0] : null;\n  useEffect(() => {\n    if (initialValue && totalSupply && !dataByContract[activeContractAddress]) {\n      dispatch(\n        init({\n          totalSupply: totalSupply.toNumber(),\n          contractAddress: activeContractAddress,\n          initialValue: initialValue.toNumber()\n        })\n      );\n    }\n  }, [\n    dispatch,\n    totalSupply,\n    dataByContract,\n    activeContractAddress,\n    initialValue\n  ]);\n\n  // Effect that activates after totalSupply is obtained, and store has been initialized\n  // Finds the next tokens that have not got any uri\n  useEffect(() => {\n    if (totalSupply && dataByContract[activeContractAddress]) {\n      let list: number[] = missingUriByContract[activeContractAddress].filter(\n        (_, index) => index <= 500\n      );\n      if (\n        list.length &&\n        JSON.stringify(list) !== JSON.stringify(pendingUriTokens)\n      ) {\n        setPendingUriTokens(list);\n      }\n    }\n  }, [\n    setPendingUriTokens,\n    forceUpdate,\n    activeContractAddress,\n    dispatch,\n    totalSupply,\n    dataByContract,\n    missingUriByContract,\n    pendingUriTokens\n  ]);\n\n  // Effect that dispatches the uris that are present from blockchain\n  // but not yet present in the store\n  const stringCache = JSON.stringify(tokenURIs);\n  useEffect(() => {\n    if (totalSupply && dataByContract[activeContractAddress]) {\n      let tokensToDispatch: any[] = [];\n      let tokensToDispatchIds: any[] = [];\n\n      pendingUriTokens.forEach((t, index) => {\n        if (tokenURIs[index] && !dataByContract[activeContractAddress][t].uri) {\n          tokensToDispatch = [\n            ...tokensToDispatch,\n            { tokenId: t, uri: tokenURIs[index][0] }\n          ];\n          tokensToDispatchIds = [...tokensToDispatchIds, t];\n        }\n      });\n\n      if (tokensToDispatch.length) {\n        dispatch(\n          setMetadataURI({\n            contractAddress: activeContractAddress,\n            tokens: tokensToDispatch\n          })\n        );\n      }\n    }\n  }, [\n    activeContractAddress,\n    stringCache,\n    pendingUriTokens,\n    totalSupply,\n    dataByContract,\n    dispatch,\n    tokenURIs\n  ]);\n\n  // Effect to load when a different contract address is detected\n  const prevActiveContractAddress = usePrevious(activeContractAddress);\n  useEffect(() => {\n    if (prevActiveContractAddress !== activeContractAddress) {\n      Object.values(delayedImagesMap.current).forEach((e: any) => {\n        if (e && e.controller) {\n          e.controller.abort();\n        }\n      });\n      Object.values(delayedJsonMap.current).forEach((e: any) => {\n        if (e && e.controller) {\n          e.controller.abort();\n        }\n      });\n      delayedImagesMap.current = {};\n      delayedJsonMap.current = {};\n      imagesLoadedMap.current = {};\n      setPendingUriTokens([]);\n    }\n  }, [activeContractAddress, prevActiveContractAddress]);\n\n  const delayCachedImage = useCallback(\n    async (\n      tokenId: number,\n      sleepTime: number,\n      signal: any,\n      imgSrc?: string\n    ) => {\n      await sleep(sleepTime, signal);\n\n      let img: any = null;\n      img = new window.Image();\n\n      let imgUrl =\n        imgSrc ?? dataByContract[activeContractAddress][tokenId].json.image;\n      if (imgUrl.startsWith(\"ipfs:\")) {\n        imgUrl = ipfsGatewayUrl(imgUrl, ipfsGateway);\n      }\n\n      img.src = imgUrl;\n      img.onload = () => {\n        if (!signal.aborted) {\n          imagesLoadedMap.current = {\n            ...imagesLoadedMap.current,\n            [tokenId]: img.src\n          };\n\n          let newDelayedImagesMap = { ...delayedImagesMap.current };\n          delete newDelayedImagesMap[tokenId];\n          delayedImagesMap.current = newDelayedImagesMap;\n\n          forceUpdate();\n        }\n      };\n      await sleep(10000, signal);\n\n      // If image is not loading, retry\n      if (!img.complete || !img.naturalWidth) {\n        img.src = \"\";\n\n        if (!signal.aborted) {\n          const controller = new AbortController();\n\n          const promise = delayCachedImage(tokenId, 0, signal, imgUrl);\n\n          let newDelayedImagesMap = { ...delayedImagesMap.current };\n          newDelayedImagesMap[tokenId] = { promise, controller };\n          delayedImagesMap.current = newDelayedImagesMap;\n        }\n      }\n    },\n    [activeContractAddress, dataByContract, forceUpdate, ipfsGateway]\n  );\n\n  // Callback for obtaining the JSON Metadata\n  const fetchTokenJSON = useCallback(\n    async (tokenId: number, signal: any) => {\n      if (\n        !dataByContract[activeContractAddress] ||\n        !dataByContract[activeContractAddress][tokenId]\n      ) {\n        return;\n      }\n      let uri = dataByContract[activeContractAddress][tokenId].uri;\n\n      try {\n        if (uri.startsWith(\"ipfs:\")) {\n          uri = ipfsGatewayUrl(uri, ipfsGateway);\n        } else if (corsProxyUrl) {\n          uri = corsProxyUrl + uri;\n        }\n\n        const response = await fetch(uri, { signal });\n        const data = await response.text();\n\n        dispatch(\n          setMetadataJSON({\n            contractAddress: activeContractAddress,\n            tokens: [{ tokenId, json: JSON.parse(data) }]\n          })\n        );\n\n        const controller = new AbortController();\n\n        const promise = delayCachedImage(\n          tokenId,\n          2000,\n          signal,\n          JSON.parse(data).image\n        );\n        delayedImagesMap.current = {\n          ...delayedImagesMap.current,\n          [tokenId]: { promise, controller }\n        };\n\n        return data;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [\n      dataByContract,\n      activeContractAddress,\n      dispatch,\n      corsProxyUrl,\n      ipfsGateway,\n      delayCachedImage\n    ]\n  );\n\n  const onItemsRendered = ({\n    overscanStartIndex,\n    overscanStopIndex,\n    visibleStartIndex,\n    visibleStopIndex\n  }: any) => {\n    Object.values(delayedImagesMap.current).forEach((e: any) => {\n      if (e && e.controller) {\n        e.controller.abort();\n      }\n    });\n\n    Object.values(delayedJsonMap.current).forEach((e: any) => {\n      if (e && e.controller) {\n        e.controller.abort();\n      }\n    });\n\n    delayedImagesMap.current = {};\n    delayedJsonMap.current = {};\n\n    const times = Math.floor(containerWidth / itemSize);\n    const visibleFirstToken = visibleStartIndex * times;\n\n    let visibleLastToken = visibleStopIndex * times + times;\n    if (visibleLastToken > totalSupply.toNumber()) {\n      visibleLastToken = totalSupply.toNumber();\n    }\n\n    let jsonDelay = 1;\n    let imageDelay = 1;\n\n    for (let i = visibleFirstToken; i <= visibleLastToken; i++) {\n      const tokenId = parseInt(\n        Object.keys(dataByContract[activeContractAddress])[i]\n      );\n      if (\n        dataByContract[activeContractAddress][tokenId] &&\n        (dataByContract[activeContractAddress][tokenId].json\n          ? !dataByContract[activeContractAddress][tokenId].json.image\n          : true) &&\n        !delayedJsonMap.current[tokenId]\n      ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        const promise = delayJson(tokenId, jsonDelay * 1000, signal);\n        delayedJsonMap.current = {\n          ...delayedJsonMap.current,\n          [tokenId]: { promise, controller }\n        };\n        jsonDelay = jsonDelay + 1;\n      }\n\n      if (\n        dataByContract[activeContractAddress][tokenId] &&\n        dataByContract[activeContractAddress][tokenId].json &&\n        dataByContract[activeContractAddress][tokenId].json.image &&\n        !delayedImagesMap.current[tokenId] &&\n        !imagesLoadedMap.current[tokenId]\n      ) {\n        const controller = new AbortController();\n        const signal = controller.signal;\n\n        const promise = delayCachedImage(\n          tokenId,\n          imageDelay * 2000,\n          signal,\n          dataByContract[activeContractAddress][tokenId].json.image\n        );\n        delayedImagesMap.current = {\n          ...delayedImagesMap.current,\n          [tokenId]: { promise, controller }\n        };\n        jsonDelay = jsonDelay + 1;\n      }\n    }\n  };\n\n  const delayJson = async (tokenId: number, sleepTime: number, signal: any) => {\n    await sleep(sleepTime, signal);\n    fetchTokenJSON(tokenId, signal);\n  };\n\n  // Function called for render the dinaymic table\n  const cellRenderer = ({ index, style, ref }: any) => {\n    const times = Math.floor(containerWidth / itemSize);\n    const start = index * times;\n    const cells = new Array(times)\n      .fill({})\n      .filter((_, index) => start + index < totalSupply.toNumber());\n\n    return (\n      <Flex direction=\"row\" justify=\"center\" style={style}>\n        {cells.map((_, index) => {\n          const tokenId = parseInt(\n            Object.keys(dataByContract[activeContractAddress])[start + index]\n          );\n\n          return (\n            <Link\n              key={`${tokenId}-${index}`}\n              onClick={() => {\n                imagesLoadedMap.current[tokenId] && setTokenModal(tokenId);\n              }}\n            >\n              <Box position=\"relative\" _hover={{ background: \"blue\" }}>\n                <Flex\n                  height={itemSize}\n                  width={itemSize}\n                  bg=\"gray.900\"\n                  opacity={imagesLoadedMap.current[tokenId] ? 0 : 1}\n                  position=\"absolute\"\n                  top=\"0\"\n                  _hover={{ opacity: \"0.9\" }}\n                  justify=\"center\"\n                  align=\"center\"\n                  direction=\"column\"\n                >\n                  <Text fontSize={{ base: 18, sm: 25, md: 40 }}>\n                    #{tokenId.toLocaleString()}\n                  </Text>\n                  <Flex>\n                    <Text ml={2} fontSize={{ base: 7, sm: 8, md: 10 }}>\n                      {imagesLoadedMap.current[tokenId] &&\n                      dataByContract[activeContractAddress][tokenId].json &&\n                      dataByContract[activeContractAddress][tokenId].json.name\n                        ? dataByContract[activeContractAddress][tokenId].json\n                            .name\n                        : !delayedImagesMap.current[tokenId] &&\n                          !delayedJsonMap.current[tokenId]\n                        ? \"\\u00A0\"\n                        : !dataByContract[activeContractAddress][tokenId].json\n                        ? \"LOADING METADATA\"\n                        : \"LOADING IMAGE\"}\n                    </Text>\n                  </Flex>\n                </Flex>\n                {imagesLoadedMap.current[tokenId] &&\n                dataByContract[activeContractAddress][tokenId] &&\n                dataByContract[activeContractAddress][tokenId].json &&\n                dataByContract[activeContractAddress][tokenId].json.image ? (\n                  <Image\n                    boxSize={itemSize}\n                    alt={`${tokenId}`}\n                    title={`${tokenId}`}\n                    loading=\"lazy\"\n                    src={imagesLoadedMap.current[tokenId]}\n                  />\n                ) : (\n                  <Flex height={itemSize} width={itemSize}></Flex>\n                )}\n              </Box>\n            </Link>\n          );\n        })}\n      </Flex>\n    );\n  };\n\n  return (\n    <Fragment>\n      {totalSupply && loadedUris ? (\n        <Fragment>\n          {tokenModal !== null ? (\n            <GalleryModal\n              tokenId={tokenModal}\n              imgUrl={imagesLoadedMap.current[tokenModal]}\n              onClose={() => {\n                setTokenModal(null);\n              }}\n            />\n          ) : null}\n\n          <Flex direction=\"column\" align=\"center\">\n            <Flex wrap=\"wrap\" justify=\"center\">\n              <div\n                id=\"virtualContainer\"\n                style={{ width: containerWidth, height: \"100%\" }}\n              >\n                <ReactWindowScroller listRef={listRef}>\n                  {({ ref, outerRef, style, onScroll }: any) => (\n                    <List\n                      style={style}\n                      outerRef={outerRef}\n                      ref={ref}\n                      height={window.innerHeight}\n                      itemCount={Math.ceil(\n                        totalSupply.toNumber() /\n                          Math.floor(containerWidth / itemSize)\n                      )}\n                      itemSize={itemSize}\n                      width={window.innerWidth}\n                      onScroll={onScroll}\n                      onItemsRendered={debounce(onItemsRendered, 1000)}\n                    >\n                      {cellRenderer}\n                    </List>\n                  )}\n                </ReactWindowScroller>\n              </div>\n            </Flex>\n          </Flex>\n        </Fragment>\n      ) : (\n        <Flex p={5} mt={8} align=\"center\" justify=\"center\" direction=\"column\">\n          <Box color=\"gray.700\">\n            <Spinner />\n          </Box>\n          <Box mt={2}>\n            <Text textAlign=\"center\">\n              {\" \"}\n              {!wrongNetWork\n                ? `Loading data from the blockchain, please wait`\n                : \"Please connect to Ethereum Network\"}\n            </Text>\n            <Text textAlign=\"center\">\n              {totalSupply &&\n              !loadedUris &&\n              missingUriByContract[activeContractAddress] &&\n              missingUriByContract[activeContractAddress].length <\n                totalSupply.toNumber()\n                ? `[ ${missingUriByContract[\n                    activeContractAddress\n                  ].length.toLocaleString()} / ${\n                    totalSupply ? totalSupply.toNumber().toLocaleString() : \"\"\n                  } ]`\n                : \"\"}\n            </Text>\n          </Box>\n        </Flex>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Gallery;\n","// The name of the gateway should be included in the switch case on\n// src/helpers/ipfsGatewayUrl.ts\n\nconst ipsGateways: any[] = [\n  {\n    name: \"cloudflare-ipfs.com\"\n  },\n  {\n    name: \"dweb.link\"\n  },\n  {\n    name: \"infura-ipfs.io\"\n  },\n  {\n    name: \"gateway.pinata.cloud\"\n  },\n  {\n    name: \"ipfs.io\"\n  },\n  {\n    name: \"gateway.ipfs.io\"\n  },\n  {\n    name: \"ravencoinipfs-gateway.com\"\n  }\n];\n\nexport default ipsGateways;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Flex,\n  Box,\n  Button,\n  Input,\n  Heading,\n  Select,\n  FormControl,\n  FormLabel,\n  Link\n} from \"@chakra-ui/react\";\n\nimport { RootState } from \"./redux/store\";\n\nimport { changeActiveContractAddress } from \"./redux/contractsSlice\";\nimport {\n  initialState as optionsInitialState,\n  setCorsProxyUrl,\n  setIpfsGateway\n} from \"./redux/optionsSlice\";\nimport presets from \"./presets\";\nimport ipfsGateways from \"./ipsGateways\";\n\nconst Header = () => {\n  const activeContractAddress = useSelector(\n    ({ contracts: { activeContractAddress } }: RootState) =>\n      activeContractAddress\n  );\n  const corsProxyUrl = useSelector(\n    ({ options: { corsProxyUrl } }: RootState) => corsProxyUrl\n  );\n  const ipfsGateway = useSelector(\n    ({ options: { ipfsGateway } }: RootState) => ipfsGateway\n  );\n  const dispatch = useDispatch();\n  const [formContractAddress, setFormContractAddress] = useState<string>(\n    activeContractAddress\n  );\n  const [formIpfsGatewayUrl, serFormIpfsGatewayUrl] = useState<string>(\n    ipfsGateway\n  );\n  const [firstFormIpfsGatewayUrl, setFirstFormIpfsGatewayUrl] = useState<\n    string\n  >(ipfsGateway);\n  const [preset, setPreset] = useState(\n    presets.find(({ address }) => address === activeContractAddress)\n      ? presets.find(({ address }) => address === activeContractAddress).address\n      : \"\"\n  );\n  const [showOptions, setShowOptions] = useState<boolean>(false);\n  const [formCorsProxyUrl, setFormCorsProxyUrl] = useState<string>(\n    corsProxyUrl == null ? \"\" : corsProxyUrl\n  );\n  const [firstFormCorsProxyUrl, setFirstFormCorsProxyUrl] = useState<\n    string | null\n  >(corsProxyUrl == null ? \"\" : corsProxyUrl);\n\n  let presetsSorted = presets;\n  presetsSorted.sort((a, b) => a.name.localeCompare(b.name));\n  return (\n    <Box\n      id=\"header\"\n      as=\"header\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      width=\"100%\"\n      p={0}\n      alignItems=\"center\"\n    >\n      <Flex\n        borderRadius=\"20px\"\n        bg=\"gray.600\"\n        p={4}\n        m={5}\n        justify=\"center\"\n        maxWidth=\"827px\"\n      >\n        <Flex direction=\"column\">\n          <Heading textAlign=\"center\" as=\"h1\">\n            NFT Explorer\n          </Heading>\n          <Box pt={5} pb={5} pl={5} pr={5}>\n            Enter an<b> Ethereum ERC721</b> Contract Address with the\n            <b>\n              {\" \"}\n              <Link href=\"https://eips.ethereum.org/EIPS/eip-721\">\n                ERC721Enumerable\n              </Link>\n            </b>{\" \"}\n            Extension, or select one of the available Collection presets. Data\n            will be dynamically fetched as you scroll.\n          </Box>\n          <Flex\n            justify=\"space-around\"\n            align=\"center\"\n            height=\"100%\"\n            direction={{ base: \"column\", md: \"row\" }}\n          >\n            <Select\n              width={{ base: \"100%\", md: \"180px\" }}\n              onChange={({ target: { value } }) => {\n                setPreset(value);\n                if (value) {\n                  setFormContractAddress(value);\n                  dispatch(changeActiveContractAddress(value));\n                }\n              }}\n              value={preset}\n            >\n              {presetsSorted.map(({ name, address }) => (\n                <option key={address} value={address}>\n                  {name}\n                </option>\n              ))}\n              <option key=\"other\" value=\"\">\n                Other\n              </option>\n            </Select>\n            <Input\n              mt={{ base: 2, md: 0 }}\n              ml=\"5px\"\n              width={{ base: \"100%\", md: \"445px\" }}\n              placeholder=\"Address\"\n              value={formContractAddress}\n              onChange={({ target: { value } }) => {\n                setFormContractAddress(value);\n              }}\n            />\n            <Flex mt={{ base: 2, md: 0 }}>\n              <Button\n                ml=\"5px\"\n                onClick={() => {\n                  dispatch(changeActiveContractAddress(formContractAddress));\n\n                  setPreset(\n                    presets.find(\n                      ({ address }) => address === formContractAddress\n                    )\n                      ? presets.find(\n                          ({ address }) => address === formContractAddress\n                        ).address\n                      : \"\"\n                  );\n                }}\n              >\n                Go\n              </Button>\n              <Button\n                ml=\"5px\"\n                onClick={() => {\n                  setShowOptions(!showOptions);\n                }}\n              >\n                Options\n              </Button>\n            </Flex>\n          </Flex>\n          {showOptions ? (\n            <Flex\n              direction=\"column\"\n              m={4}\n              p={4}\n              borderWidth=\"2px\"\n              borderRadius=\"12px\"\n            >\n              <Flex direction=\"column\">\n                <FormControl id=\"corsProxy\">\n                  <FormLabel>CORS Proxy</FormLabel>\n                  <Input\n                    ml=\"5px\"\n                    placeholder=\"\"\n                    value={formCorsProxyUrl}\n                    onChange={({ target: { value } }) => {\n                      setFormCorsProxyUrl(value);\n                    }}\n                  />\n                </FormControl>\n                <FormControl id=\"ipfsGateway\" mt={3}>\n                  <FormLabel>IPFS Gateway</FormLabel>\n                  <Select\n                    value={formIpfsGatewayUrl}\n                    onChange={({ target: { value } }) => {\n                      serFormIpfsGatewayUrl(value);\n                    }}\n                  >\n                    {ipfsGateways.map(({ name }) => (\n                      <option key={name} value={name}>\n                        {name}\n                      </option>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Flex>\n              <Flex mt={3} justify=\"end\">\n                <Button\n                  onClick={() => {\n                    dispatch(setCorsProxyUrl(formCorsProxyUrl));\n                    dispatch(setIpfsGateway(formIpfsGatewayUrl));\n                    setShowOptions(false);\n                    setFirstFormIpfsGatewayUrl(formIpfsGatewayUrl);\n                    setFirstFormCorsProxyUrl(formCorsProxyUrl);\n                  }}\n                  isDisabled={\n                    firstFormCorsProxyUrl === formCorsProxyUrl &&\n                    firstFormIpfsGatewayUrl === formIpfsGatewayUrl\n                  }\n                >\n                  Update\n                </Button>\n                <Button\n                  ml={2}\n                  isDisabled={\n                    optionsInitialState.corsProxyUrl === formCorsProxyUrl &&\n                    optionsInitialState.ipfsGateway === formIpfsGatewayUrl\n                  }\n                  onClick={() => {\n                    setFormCorsProxyUrl(\n                      optionsInitialState.corsProxyUrl == null\n                        ? \"\"\n                        : optionsInitialState.corsProxyUrl\n                    );\n                    serFormIpfsGatewayUrl(optionsInitialState.ipfsGateway);\n                    dispatch(setCorsProxyUrl(optionsInitialState.corsProxyUrl));\n                    dispatch(setIpfsGateway(optionsInitialState.ipfsGateway));\n                    setShowOptions(false);\n                    setFirstFormIpfsGatewayUrl(optionsInitialState.ipfsGateway);\n                    setFirstFormCorsProxyUrl(optionsInitialState.corsProxyUrl);\n                  }}\n                >\n                  Reset\n                </Button>\n              </Flex>\n            </Flex>\n          ) : null}\n        </Flex>\n      </Flex>\n    </Box>\n  );\n};\nexport default Header;\n","import { useEffect, useState, useCallback, Fragment } from \"react\";\nimport { Box, Flex, Link } from \"@chakra-ui/react\";\nimport { RootState } from \"./redux/store\";\nimport useTokenByIndex from \"./hooks/useTokenByIndex\";\nimport useTotalSupply from \"./hooks/useTotalSupply\";\nimport { useSelector } from \"react-redux\";\n\nconst Navigator = ({ listRef }) => {\n  const containerWidth = window.innerWidth * 0.9;\n  const [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  // Updates the state  with the window values\n  const resize = useCallback(() => {\n    setWindowSize({\n      height: window.innerHeight,\n      width: window.innerWidth\n    });\n  }, []);\n\n  // Effect to recalculate size\n  useEffect(() => {\n    resize();\n    window.addEventListener(\"resize\", () => {\n      resize();\n    });\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, [resize]);\n\n  const activeContractAddress = useSelector(\n    ({ contracts: { activeContractAddress } }: RootState) =>\n      activeContractAddress\n  );\n  const dataByContract = useSelector(\n    ({ contracts: { dataByContract } }: RootState) => dataByContract\n  );\n  const missingUriByContract = useSelector(\n    ({ contracts: { missingUriByContract } }: RootState) => missingUriByContract\n  );\n  const itemSize = useSelector(\n    ({ options: { itemSize } }: RootState) => itemSize\n  );\n\n  const totalSupply = useTotalSupply(activeContractAddress);\n  const [tokensByIndex] = useTokenByIndex(activeContractAddress, [0]);\n  const initialValue = tokensByIndex ? tokensByIndex[0] : null;\n\n  const offsetScroll = 30;\n  const [indicatorPosition, setIndicatorPosition] = useState({\n    x: 0,\n    y: offsetScroll\n  });\n  const [ratio, setRatio] = useState(0);\n  useEffect(() => {\n    const fn = (e: any) => {\n      const yPos =\n        (window.scrollY / document.body.offsetHeight) * window.innerHeight;\n\n      setRatio(window.scrollY / document.body.offsetHeight);\n\n      const ratio = window.scrollY / document.body.offsetHeight;\n      setIndicatorPosition({\n        x: indicatorPosition.x,\n        y: yPos + offsetScroll - ratio * offsetScroll - ratio * offsetScroll\n      });\n    };\n\n    window.addEventListener(\"scroll\", fn);\n    return () => {\n      window.removeEventListener(\"scroll\", fn);\n    };\n  }, [indicatorPosition]);\n\n  const numItems = 8;\n  let chunks: number[] = [];\n  if (\n    totalSupply &&\n    initialValue &&\n    dataByContract[activeContractAddress] &&\n    Object.values(dataByContract[activeContractAddress]).length\n  ) {\n    let increase = Math.floor(totalSupply.toNumber() / (numItems + 1));\n    let items: any = [];\n    for (let i = 1; i < numItems + 1; i++) {\n      items = [\n        ...items,\n        items.length ? items[items.length - 1] + increase : increase\n      ];\n    }\n\n    chunks = [\n      initialValue.toNumber(),\n      ...items,\n      parseInt(\n        Object.keys(dataByContract[activeContractAddress])[\n          Object.keys(dataByContract[activeContractAddress]).length - 1\n        ]\n      )\n    ];\n  }\n\n  // Flag that indicates all URIs of the gallery have been obtained\n  const loadedUris =\n    missingUriByContract[activeContractAddress] &&\n    missingUriByContract[activeContractAddress].length === 0;\n\n  const isReady =\n    loadedUris &&\n    totalSupply &&\n    initialValue &&\n    dataByContract[activeContractAddress];\n  const offset = 1000;\n  let itemView = totalSupply ? totalSupply.toNumber() * ratio : 1;\n\n  return (\n    <Fragment>\n      <Flex\n        position=\"fixed\"\n        right=\"0\"\n        top=\"0\"\n        width=\"70px\"\n        height={windowSize.height}\n        direction=\"column\"\n        justify=\"space-between\"\n        bg=\"gray.900\"\n        pb=\"15px\"\n        pt=\"15px\"\n        pl=\"10px\"\n      >\n        {isReady &&\n          chunks.map((num, index) => {\n            let growthPercentage: number | null = null;\n            if (itemView >= num && itemView < num + offset) {\n              growthPercentage = itemView === 0 ? 0 : (itemView - num) / offset;\n            } else if (itemView <= num && itemView > num - offset) {\n              growthPercentage = (num - itemView) / offset;\n            }\n            return (\n              <Box\n                key={index}\n                textAlign=\"end\"\n                mr={2}\n                fontSize={\n                  growthPercentage != null ? 20 - 10 * growthPercentage : 10\n                }\n              >\n                <Link\n                  onClick={() => {\n                    const times = Math.floor(containerWidth / itemSize);\n                    const numTo = Math.floor(num / times);\n                    listRef.current.scrollToItem(numTo, \"start\");\n                  }}\n                >\n                  {num.toLocaleString()}\n                </Link>\n              </Box>\n            );\n          })}\n      </Flex>\n      <Box\n        width=\"70px\"\n        opacity=\"0.1\"\n        bg=\"white\"\n        height=\"2px\"\n        position=\"fixed\"\n        fontSize={10}\n        right={indicatorPosition.x}\n        top={indicatorPosition.y}\n      />\n    </Fragment>\n  );\n};\nexport default Navigator;\n","import { createRef } from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nimport \"./App.css\";\n\nimport Gallery from \"./Gallery\";\nimport Header from \"./Header\";\nimport Navigator from \"./Navigator\";\n\nconst App = () => {\n  const listRef = createRef();\n  return (\n    <Box pr=\"90px\">\n      <Navigator listRef={listRef} />\n      <Header />\n      <Box as=\"main\" pt=\"10px\">\n        <Gallery listRef={listRef} />\n      </Box>\n    </Box>\n  );\n};\n\nexport default App;\n","import { extendTheme, ThemeConfig } from \"@chakra-ui/react\";\n\nconst config: ThemeConfig = {\n  initialColorMode: \"dark\",\n  useSystemColorMode: false\n};\n\nconst theme = extendTheme({ config });\nexport default theme;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contractsReducer from \"./contractsSlice\";\nimport optionsReducer from \"./optionsSlice\";\nimport { save, load } from \"redux-localstorage-simple\";\n\nconst store = configureStore({\n  reducer: {\n    contracts: contractsReducer,\n    options: optionsReducer\n  },\n  middleware: [\n    save({ states: [\"contracts\", \"options\"], namespace: \"localdata\" })\n  ],\n  preloadedState: load({\n    states: [\"contracts\", \"options\"],\n    namespace: \"localdata\"\n  })\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\nimport { DAppProvider } from \"@usedapp/core\";\nimport { ColorModeScript } from \"@chakra-ui/react\";\nimport theme from \"./theme\";\nimport { configChainId, alchemyApi } from \"./constants\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nconst config = {\n  readOnlyChainId: configChainId,\n  readOnlyUrls: {\n    [configChainId]: alchemyApi\n  }\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <DAppProvider config={config}>\n        <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n        <Provider store={store}>\n          <App />\n        </Provider>\n      </DAppProvider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n"],"sourceRoot":""}